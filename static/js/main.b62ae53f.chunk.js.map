{"version":3,"sources":["app.module.scss","components/TodoItem/TodoItem.tsx","components/TodoItemForm/TodoItemForm.tsx","components/TodoList/TodoList.tsx","utils/useLocalStorageState.ts","utils/useId.ts","App.tsx","index.tsx","components/TodoList/todo.list.module.scss","components/TodoItem/todo.item.module.scss","components/TodoItemForm/todo.item.form.module.scss"],"names":["module","exports","TodoItem","props","id","title","handleRemoveItem","className","styles","todoItem","type","checkbox","onClick","TodoItemForm","handleAddItem","React","useState","taskTitle","setTaskTitle","formWrapper","value","onChange","event","target","input","placeholder","TodoList","key","defaultValue","valueInLocalStorage","window","localStorage","getItem","JSON","parse","state","setState","prevKeyRef","useRef","useEffect","prevKey","current","removeItem","setItem","stringify","useLocalStorageState","tasks","setTasks","sortedTasks","useMemo","sortBy","reverse","filteredTasks","filter","item","itemsList","map","listWrapper","array","ids","i","length","Math","max","tasksCopy","divider","todoList","App","root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,eAAiB,8B,+JCQrD,SAASC,EAASC,GACvB,IAAQC,EAAgCD,EAAhCC,GAAIC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,iBACnB,OACE,qBAAIC,UAAWC,IAAOC,SAAtB,UACE,uBAAOC,KAAK,WAAWH,UAAWC,IAAOG,WACzC,8BAAMN,IACN,wBAAQO,QAAS,kBAAMN,EAAiBF,IAAxC,qB,4CCPC,SAASS,EAAaV,GAC3B,IAAQW,EAAkBX,EAAlBW,cACR,EAAkCC,IAAMC,SAAiB,IAAzD,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,OACE,sBAAKX,UAAWC,IAAOW,YAAvB,UACE,uBAAOC,MAAOH,EAAWI,SAVH,SAACC,GACzBJ,EAAaI,EAAMC,OAAOH,QAS8Bb,UAAWC,IAAOgB,MAAOC,YAAY,2BAC3F,wBAAQb,QARc,WACxBE,EAAcG,GACdC,EAAa,KAMX,yBCdC,SAASQ,IACd,MCPK,SAAiCC,EAAaC,GACnD,MAA0Bb,IAAMC,UAAY,WAC1C,IAAMa,EAAsBC,OAAOC,aAAaC,QAAQL,GACxD,OAAIE,EACKI,KAAKC,MAAML,GAEW,oBAAjBD,EAA8BA,IAAiBA,KAL/D,mBAAOO,EAAP,KAAcC,EAAd,KAQMC,EAAatB,IAAMuB,OAAOX,GAWhC,OATAZ,IAAMwB,WAAU,WACd,IAAMC,EAAUH,EAAWI,QACvBD,IAAYb,GACdG,OAAOC,aAAaW,WAAWF,GAEjCH,EAAWI,QAAUd,EACrBG,OAAOC,aAAaY,QAAQhB,EAAKM,KAAKW,UAAUT,MAC/C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,GDbWS,CAAqC,QAAS,IAAxE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAcjC,IAAMkC,SAAQ,kBAAMC,iBAAOJ,EAAO,SAASK,YAAW,CAACL,IASrExC,EAAmB,SAACF,GACxB,IAAMgD,EAAgBN,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKlD,KAAOA,KACzD2C,EAASK,IAGLG,EAAYP,EAAYQ,KAAI,SAACF,GAAD,OAChC,cAACpD,EAAD,CAAwBE,GAAIkD,EAAKlD,GAAIC,MAAOiD,EAAKjD,MAAOC,iBAAkBA,GAA3DgD,EAAKlD,OAGtB,OACE,sBAAKG,UAAWC,IAAOiD,YAAvB,UACE,cAAC5C,EAAD,CAAcC,cAlBI,SAACT,GACrB,IEfkBqD,EFeZC,EAAMb,EAAMU,KAAI,SAACI,GAAD,OAAOA,EAAExD,MACzBkD,EAAO,CAAElD,IEhBGsD,EFgBOC,EEfvBD,EAAMG,QAAU,EAAU,EACZC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IACX,GFacrD,SACzB2D,EAAS,sBAAOlB,GAAP,CAAcQ,IAC7BP,EAASiB,MAgBP,qBAAKzD,UAAWC,IAAOyD,UAEvB,oBAAI1D,UAAWC,IAAO0D,SAAtB,SAAiCX,OGxBxBY,MARf,WACE,OACE,qBAAK5D,UAAWC,IAAO4D,KAAvB,SACE,cAAC1C,EAAD,OCFN2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BzE,EAAOC,QAAU,CAAC,YAAc,+BAA+B,SAAW,4BAA4B,QAAU,6B,kBCAhHD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,SAAW,8B,kBCApED,EAAOC,QAAU,CAAC,YAAc,oCAAoC,MAAQ,iC","file":"static/js/main.b62ae53f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app_root__2_qmO\",\"contentWrapper\":\"app_contentWrapper__23TUA\"};","import React from \"react\";\nimport { TodoTaskItem } from \"../../types/TodoTaskItem\";\nimport styles from \"./todo.item.module.scss\";\n\ninterface TodoItemProps extends TodoTaskItem {\n  /** Коллбэк, удаляющий задачу */\n  handleRemoveItem: (id: number) => void;\n}\n\nexport function TodoItem(props: TodoItemProps) {\n  const { id, title, handleRemoveItem } = props;\n  return (\n    <li className={styles.todoItem}>\n      <input type=\"checkbox\" className={styles.checkbox} />\n      <div>{title}</div>\n      <button onClick={() => handleRemoveItem(id)}>×</button>\n    </li>\n  );\n}\n","import React from \"react\";\nimport styles from \"./todo.item.form.module.scss\";\n\ninterface TodoItemFormProps {\n  /** Коллбэк, обрабатывающий создание задачи */\n  handleAddItem: (title: string) => void;\n}\n\nexport function TodoItemForm(props: TodoItemFormProps) {\n  const { handleAddItem } = props;\n  const [taskTitle, setTaskTitle] = React.useState<string>(\"\");\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTaskTitle(event.target.value);\n  };\n  const handleButtonClick = () => {\n    handleAddItem(taskTitle);\n    setTaskTitle(\"\");\n  };\n  // ToDo input validation, button styles\n  return (\n    <div className={styles.formWrapper}>\n      <input value={taskTitle} onChange={handleInputChange} className={styles.input} placeholder=\"What needs to be done?\" />\n      <button onClick={handleButtonClick}>add item</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TodoItem } from \"../TodoItem\";\nimport { sortBy } from \"lodash\";\nimport styles from \"./todo.list.module.scss\";\nimport { TodoItemForm } from \"../TodoItemForm\";\nimport { useLocalStorageState } from \"../../utils/useLocalStorageState\";\nimport { useId } from \"../../utils/useId\";\nimport { TodoTaskItem } from \"../../types/TodoTaskItem\";\n\nexport function TodoList() {\n  const [tasks, setTasks] = useLocalStorageState<TodoTaskItem[]>(\"tasks\", []);\n\n  const sortedTasks = React.useMemo(() => sortBy(tasks, \"title\").reverse(), [tasks]);\n\n  const handleAddItem = (title: string) => {\n    const ids = tasks.map((i) => i.id);\n    const item = { id: useId(ids), title };\n    const tasksCopy = [...tasks, item];\n    setTasks(tasksCopy);\n  };\n\n  const handleRemoveItem = (id: number) => {\n    const filteredTasks = tasks.filter((item) => item.id !== id);\n    setTasks(filteredTasks);\n  };\n\n  const itemsList = sortedTasks.map((item) => (\n    <TodoItem key={item.id} id={item.id} title={item.title} handleRemoveItem={handleRemoveItem} />\n  ));\n\n  return (\n    <div className={styles.listWrapper}>\n      <TodoItemForm handleAddItem={handleAddItem} />\n\n      <div className={styles.divider} />\n\n      <ul className={styles.todoList}>{itemsList}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nexport function useLocalStorageState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = React.useState<T>(() => {\n    const valueInLocalStorage = window.localStorage.getItem(key);\n    if (valueInLocalStorage) {\n      return JSON.parse(valueInLocalStorage);\n    }\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n  });\n\n  const prevKeyRef = React.useRef(key);\n\n  React.useEffect(() => {\n    const prevKey = prevKeyRef.current;\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey);\n    }\n    prevKeyRef.current = key;\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","export function useId(array: number[]): number {\n  if (array.length <= 0) return 1;\n  const biggestId = Math.max(...array);\n  return biggestId + 1;\n}\n","import React from \"react\";\nimport styles from \"./app.module.scss\";\nimport { TodoList } from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className={styles.root}>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"todo_list_listWrapper__19v7q\",\"todoList\":\"todo_list_todoList__1Nnaz\",\"divider\":\"todo_list_divider__1z1SR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"todo_item_todoItem__3Y-7e\",\"checkbox\":\"todo_item_checkbox__iCubo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"todo_item_form_formWrapper__w0LiZ\",\"input\":\"todo_item_form_input__3STHf\"};"],"sourceRoot":""}